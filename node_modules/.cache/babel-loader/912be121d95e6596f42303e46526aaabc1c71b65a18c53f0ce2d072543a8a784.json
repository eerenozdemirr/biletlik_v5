{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./SignUp.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignUp=()=>{const[form,setForm]=useState({name:'',email:'',phone:'',password:''});const[message,setMessage]=useState('');const[error,setError]=useState('');const handleChange=e=>{const{name,value}=e.target;setForm({...form,[name]:value});};// Ad Soyad Doğrulama\nconst validateName=name=>{const nameRegex=/^[a-zA-Z\\s]+$/;return nameRegex.test(name);};// E-posta Doğrulama\nconst validateEmail=email=>{const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;return emailRegex.test(email);};// Telefon Numarasını Düzenleme\nconst formatPhoneNumber=phone=>{// Telefon numarasındaki tüm boşlukları ve diğer karakterleri temizleyin\nconst cleanedPhone=phone.replace(/\\D/g,'');// Telefon numarasını formatlayın (başında \"0\" olacak şekilde)\nreturn\"0\".concat(cleanedPhone);};// Şifre Doğrulama\nconst validatePassword=password=>{const passwordRegex=/^(?=.*[a-zA-Z])(?=.*\\d)(?!.*\\s).{6,}$/;return passwordRegex.test(password);};const handleSubmit=async e=>{e.preventDefault();if(!validateName(form.name)){setError('Ad Soyad sadece harf ve boşluk içermelidir.');return;}if(!validateEmail(form.email)){setError('Geçerli bir e-posta adresi girin.');return;}const formattedPhone=formatPhoneNumber(form.phone);if(!validatePassword(form.password)){setError('Şifre en az 6 karakter uzunluğunda olmalı, harf ve rakam içermeli ve boşluk olmamalıdır.');return;}try{const response=await axios.post('http://localhost:5001/api/signup',{...form,phone:formattedPhone});setMessage('Kullanıcı başarıyla kaydedildi');setError('');setForm({name:'',email:'',phone:'',password:''});}catch(error){var _error$response;setError('Kayıt hatası: '+(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||'Bilinmeyen hata'));setMessage('');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"signup-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"signup-header\",children:/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:\"biletlik\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"signup-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Hesap Olu\\u015Ftur\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Ad Soyad\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:form.name,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"E-posta\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:form.email,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone\",children:\"Telefon Numaras\\u0131\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"phone\",name:\"phone\",value:form.phone,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"\\u015Eifre\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:form.password,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"signup-button\",children:\"Hesap Olu\\u015Ftur\"})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"message-success\",children:message}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"message-error\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"login-redirect\",children:/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Zaten hesab\\u0131n\\u0131z var m\\u0131? Giri\\u015F Yap\\u0131n\"})})]})]});};export default SignUp;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","SignUp","form","setForm","name","email","phone","password","message","setMessage","error","setError","handleChange","e","value","target","validateName","nameRegex","test","validateEmail","emailRegex","formatPhoneNumber","cleanedPhone","replace","concat","validatePassword","passwordRegex","handleSubmit","preventDefault","formattedPhone","response","post","_error$response","data","className","children","onSubmit","htmlFor","type","id","onChange","required","href"],"sources":["/Users/erenozdemir/biletlik/src/components/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './SignUp.css';\n\nconst SignUp = () => {\n    const [form, setForm] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        password: ''\n    });\n\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setForm({\n            ...form,\n            [name]: value\n        });\n    };\n\n    // Ad Soyad Doğrulama\n    const validateName = (name) => {\n        const nameRegex = /^[a-zA-Z\\s]+$/;\n        return nameRegex.test(name);\n    };\n\n    // E-posta Doğrulama\n    const validateEmail = (email) => {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    };\n\n    // Telefon Numarasını Düzenleme\n    const formatPhoneNumber = (phone) => {\n        // Telefon numarasındaki tüm boşlukları ve diğer karakterleri temizleyin\n        const cleanedPhone = phone.replace(/\\D/g, '');\n        // Telefon numarasını formatlayın (başında \"0\" olacak şekilde)\n        return `0${cleanedPhone}`;\n    };\n\n    // Şifre Doğrulama\n    const validatePassword = (password) => {\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?!.*\\s).{6,}$/;\n        return passwordRegex.test(password);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!validateName(form.name)) {\n            setError('Ad Soyad sadece harf ve boşluk içermelidir.');\n            return;\n        }\n\n        if (!validateEmail(form.email)) {\n            setError('Geçerli bir e-posta adresi girin.');\n            return;\n        }\n\n        const formattedPhone = formatPhoneNumber(form.phone);\n        if (!validatePassword(form.password)) {\n            setError('Şifre en az 6 karakter uzunluğunda olmalı, harf ve rakam içermeli ve boşluk olmamalıdır.');\n            return;\n        }\n\n        try {\n            const response = await axios.post('http://localhost:5001/api/signup', {\n                ...form,\n                phone: formattedPhone\n            });\n            setMessage('Kullanıcı başarıyla kaydedildi');\n            setError('');\n            setForm({\n                name: '',\n                email: '',\n                phone: '',\n                password: ''\n            });\n        } catch (error) {\n            setError('Kayıt hatası: ' + (error.response?.data || 'Bilinmeyen hata'));\n            setMessage('');\n        }\n    };\n\n    return (\n        <div className=\"signup-container\">\n            <div className=\"signup-header\">\n                <div className=\"logo\">biletlik</div>\n            </div>\n            <div className=\"signup-form\">\n                <h2>Hesap Oluştur</h2>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"name\">Ad Soyad</label>\n                        <input \n                            type=\"text\" \n                            id=\"name\" \n                            name=\"name\" \n                            value={form.name} \n                            onChange={handleChange} \n                            required \n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"email\">E-posta</label>\n                        <input \n                            type=\"email\" \n                            id=\"email\" \n                            name=\"email\" \n                            value={form.email} \n                            onChange={handleChange} \n                            required \n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"phone\">Telefon Numarası</label>\n                        <input \n                            type=\"tel\" \n                            id=\"phone\" \n                            name=\"phone\" \n                            value={form.phone} \n                            onChange={handleChange} \n                            required \n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"password\">Şifre</label>\n                        <input \n                            type=\"password\" \n                            id=\"password\" \n                            name=\"password\" \n                            value={form.password} \n                            onChange={handleChange} \n                            required \n                        />\n                    </div>\n                    <button type=\"submit\" className=\"signup-button\">Hesap Oluştur</button>\n                </form>\n                {message && <div className=\"message-success\">{message}</div>}\n                {error && <div className=\"message-error\">{error}</div>}\n                <div className=\"login-redirect\">\n                    <a href=\"/login\">Zaten hesabınız var mı? Giriş Yapın</a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SignUp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}